@inherits TNTextBox
<label class="form-label" for="@Id" field-required="@(Required ?? ValidationFor.Body.IsRequired())">@(Label ?? ValidationFor.Body.GetDisplayName())</label>
<div class="input-group">
    <input @bind="CurrentValueAsString" type="@Type" class="form-control" id="@Id" name="@(Name ?? Id)" data-inputmask-regex="@(Mask ?? ValidationFor.Body.GetMask())" readonly="@Readonly" disabled="@Disabled" placeholder="@(Placeholder ?? ValidationFor.Body.GetDisplayPrompt())" maxlength="@(Maxlength ?? ValidationFor.Body.GetMaximumLength())" @attributes="AdditionalAttributes" />
    <button type="button" class="btn btn-primary" @onclick="ChangePasswordStatus">
        <i class="@_icon"></i>
    </button>
</div>
@if (!string.IsNullOrEmpty(Instruction))
{
    <p class="input-instruction">@Instruction</p>
}
<ValidationMessage For="@ValidationFor" />

@code {
    //public bool ShowPassword { get; set; }
    private string _icon { get; set; } = "fas fa-eye";

    protected void ChangePasswordStatus()
    {
        ShowPassword = !ShowPassword;
        _icon = ShowPassword ? "fas fa-eye-slash" : "fas fa-eye";
        Type = ShowPassword ? "text" : "password";
    }
}

