// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TN.Modules.Loggers.Infrastructure.DataAccess;

#nullable disable

namespace TN.Modules.Loggers.Infrastructure.Migrations
{
    [DbContext(typeof(LoggersDbContext))]
    partial class LoggersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Loggers")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TN.Modules.Loggers.Domain.ApplicationLogs.Aggregates.ApplicationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ApplicationLogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Channel")
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("CoreProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasMaxLength(32)
                        .HasColumnType("varchar");

                    b.Property<string>("Key")
                        .HasMaxLength(64)
                        .HasColumnType("varchar");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("ApplicationLog", "Loggers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Channel = "ApplicationLogModule",
                            ClassName = "ClassName",
                            CoreProcessId = new Guid("fc6263a3-3dc0-4fd5-b2e8-e5e72c3e227d"),
                            Date = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Ip = "::1",
                            Key = "Key",
                            Message = "Test de ApplicationLog",
                            MethodName = "MethodName",
                            TenantId = 1,
                            Type = "Info",
                            UserId = 1,
                            Value = "Value"
                        },
                        new
                        {
                            Id = 2L,
                            Channel = "ApplicationLogModule",
                            ClassName = "ClassName",
                            CoreProcessId = new Guid("1b05722d-e4df-424b-8a64-627acbf98fbe"),
                            Date = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Ip = "::1",
                            Key = "Key",
                            Message = "Test de ApplicationLog",
                            MethodName = "MethodName",
                            TenantId = 2,
                            Type = "Info",
                            UserId = 1,
                            Value = "Value"
                        });
                });

            modelBuilder.Entity("TN.Modules.Loggers.Domain.TraceLogs.Aggregates.TraceLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TraceLogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Channel")
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("CoreProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasMaxLength(32)
                        .HasColumnType("varchar");

                    b.Property<string>("Key")
                        .HasMaxLength(64)
                        .HasColumnType("varchar");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TraceLog", "Loggers");
                });

            modelBuilder.Entity("TN.Modules.Loggers.Domain.UserActivities.Aggregates.UserActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("UserActivityId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("Channel")
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("CoreProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar");

                    b.Property<string>("Ip")
                        .HasMaxLength(32)
                        .HasColumnType("varchar");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserActivity", "Loggers");
                });
#pragma warning restore 612, 618
        }
    }
}
